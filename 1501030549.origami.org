#+BLOG: rubikitch
#+POSTID: 592
#+BLOG: rubikitch
#+DATE: [2015-01-03 Sat 05:49]
#+PERMALINK: origami
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil \n:t -:nil
#+ISPAGE: nil
#+DESCRIPTION:
# (progn (erase-buffer)(find-file-hook--org2blog/wp-mode))
#+BLOG: rubikitch
#+CATEGORY: コードリーディング
#+EL_PKG_NAME: origami
#+TAGS: アウトライン
#+EL_TITLE0: elisp,Clojure,C系言語(C,Java,JavaScript,C++,Perl)でorg-mode風の折畳みをする
#+EL_URL: 
#+begin: org2blog
#+TITLE: origami.el : elisp,Clojure,C系言語(C,Java,JavaScript,C++,Perl)でorg-mode風の折畳みをする
[includeme file="inc-package-table.php" name="origami" where="melpa"]

#+end:
** 概要
<2015-01-17 Sat>
[[http://emacs.rubikitch.com/outline-magic/][outline-magic.el(レビュー)]] は *outline-mode* や
*outline-minor-mode* で *org-mode* と同等の折畳み・展開をします。

<2015-01-05 Mon>
view-modeを解除しても折畳みを保持するよう設定を更新しました。


*origami.el* は、Lisp系言語とC系言語で関数・メソッドを
折畳み・展開するマイナーモードです。

いわば、 *org-mode* 風にコードのアウトラインを
見るようにするものです。

*yafolding.el* や *hideshow.el* と同様ですが
これらよりも高機能です。

また、origami.elは言語のパーサを内蔵している点も異なります。


ただ、デフォルトの状態では単にコマンドが羅列してあるだけなので、
本設定では *view-mode* 時にC-i(TAB)を押すことで
org-mode風の挙動をさせています。

C-iで現在の関数(メソッド)を折畳み・展開し、
C-u C-iですべての関数(メソッド)の折畳み・展開をします。



一般にアウトライン操作は閲覧時に使うものなので、
view-modeにキーを割り当てておくことを強くおすすめします。

*outline-minor-mode* のように普通に
マイナーモードを定義しているだけでは、
気が狂ったようなキーバインドになってしまうからです。

コードを見るときはぜひともview-modeを使いましょう。

指の保護にもなります。

[includeme file="inc-package-install.php" name="origami" where="melpa"]
** 設定 [[http://rubikitch.com/f/150103055834.origami.el][150103055834.origami.el(以下のコードと同一)]]
#+BEGIN: include :file "/r/sync/junk/150103/150103055834.origami.el"
#+BEGIN_SRC fundamental
(require 'origami)
;; (makunbound 'origami-view-mode-map)
(define-minor-mode origami-view-mode
  "TABにorigamiの折畳みを割り当てる"
  nil "折紙"
  '(("\C-i" . origami-cycle))
  (or origami-mode (origami-mode 1)))
(defun origami-cycle (recursive)
  "origamiの機能をorg風にまとめる"
  (interactive "P")
  (call-interactively
   (if recursive 'origami-toggle-all-nodes 'origami-toggle-node)))
(defun view-mode-hook--origami ()
  (when (memq major-mode (mapcar 'car origami-parser-alist))
    (origami-view-mode (if view-mode 1 -1))))
(add-hook 'view-mode-hook 'view-mode-hook--origami)
#+END_SRC

#+END:

** 実行方法
#+BEGIN_EXAMPLE
$ wget http://rubikitch.com/f/150103055834.origami.el
$ emacs -Q -f package-initialize -l 150103055834.origami.el
#+END_EXAMPLE
# (progn (forward-line 1)(shell-command "screenshot-time.rb org_template" t))
[[file:/r/sync/screenshots/20150103062240.png]]
Fig1: view-modeにてC-u C-iで折畳み

[[file:/r/sync/screenshots/20150103062245.png]]
Fig2: C-iで展開

# /r/sync/screenshots/20150103062240.png http://rubikitch.com/wp-content/uploads/2015/01/wpid-20150103062240.png
# /r/sync/screenshots/20150103062245.png http://rubikitch.com/wp-content/uploads/2015/01/wpid-20150103062245.png
[includeme file="inc-package-relate.php" name="origami"]
