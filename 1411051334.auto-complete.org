#+BLOG: rubikitch
#+POSTID: 390
#+BLOG: rubikitch
#+DATE: [2014-11-05 Wed 13:34]
#+PERMALINK: auto-complete
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil \n:t -:nil
#+ISPAGE: nil
#+DESCRIPTION:auto-complete.elは大人気自動補完パッケージ。たくさんのメジャーモードに対応している。
# (progn (erase-buffer)(find-file-hook--org2blog/wp-mode))
#+BLOG: rubikitch
#+CATEGORY: 自動補完
#+EL_PKG_NAME: auto-complete
#+TAGS: 補完
#+EL_TITLE0: 和製自動補完の逆襲！auto-completeとcompany、あなたはどっちがお好み？
#+begin: org2blog
#+TITLE: auto-complete.el : 和製自動補完の逆襲！auto-completeとcompany、あなたはどっちがお好み？
[includeme file="inc-package-table.php" name="auto-complete" where="melpa"]
** 概要
久々に *auto-complete.el* がMELPAで更新されていました。

2ヶ月前に *less-css-mode* に対応し、
今回の更新で [[http://emacs.rubikitch.com/web-mode/][web-mode]] に対応しました。

これを使うと、タイプするだけで自動的に
補完候補がポップアップしてきます。

これがどういうものかは [[http://www.youtube.com/watch?v=rGVVnDxwJYE][YouTubeのデモ動画]] を見てください。

この前紹介した[[http://emacs.rubikitch.com/company/][company.el]] と機能的にはかぶりますが、
作者が日本人であることから、
日本ではこっちの方が知名度があります。

もちろん補完の方法はユーザが自由に作ることができます。

companyでは1つの関数を定義するだけでいいのですが、
auto-completeではanythingやhelmの情報源(source)
をモデリングしたデータ構造を定義します。

現時点では以下のメジャーモードに対応しています。

- *emacs-lisp-mode*
- *lisp-mode*
- *lisp-interaction-mode*
- *slime-repl-mode*
- *c-mode*
- *cc-mode*
- *c++-mode*
- *go-mode*
- *java-mode*
- *malabar-mode*
- *clojure-mode*
- *clojurescript-mode*
- *scala-mode*
- *scheme-mode*
- *ocaml-mode*
- *tuareg-mode*
- *coq-mode*
- *haskell-mode*
- *agda-mode*
- *agda2-mode*
- *perl-mode*
- *cperl-mode*
- *python-mode*
- *ruby-mode*
- *lua-mode*
- *tcl-mode*
- *ecmascript-mode*
- *javascript-mode*
- *js-mode*
- *js2-mode*
- *php-mode*
- *css-mode*
- *less-css-mode*
- *makefile-mode*
- *sh-mode*
- *fortran-mode*
- *f90-mode*
- *ada-mode*
- *xml-mode*
- *sgml-mode*
- *web-mode*
- *ts-mode*
- *sclang-mode*
- *verilog-mode*
- *qml-mode*

また、MELPAには以下のパッケージが存在します。

- *ac-anaconda*
- *ac-c-headers*
- *ac-cake*
- *ac-cake2*
- *ac-cider*
- *ac-dabbrev*
- *ac-dcd*
- *ac-emmet*
- *ac-etags*
- *ac-geiser*
- *ac-haskell-process*
- *ac-helm*
- *ac-inf-ruby*
- *ac-ispell*
- *ac-js2*
- *ac-math*
- *ac-octave*
- *ac-slime*
- *ac-sly*
- *auto-complete-auctex*
- *auto-complete-c-headers*
- *auto-complete-chunk*
- *auto-complete-clang*
- *auto-complete-clang-async*
- *auto-complete-exuberant-ctags*
- *auto-complete-nxml*
- *auto-complete-pcmp*
- *auto-complete-rst*
- *auto-complete-sage*

開発されてから5年が経過し、
対応しているメジャーモードがこれだけ増えたのだから、
使ってみる価値は十分にあります。

あなた好みの設定を見付け出してください。

[[http://cx4a.org/software/auto-complete/manual.ja.html][詳しい日本語マニュアル]] もあります。

# (progn (forward-line 1)(shell-command "screenshot-time.rb org_template" t))
[includeme file="inc-package-install.php" name="auto-complete" where="melpa"]

#+end:
** 概要                                                             :noexport:
久々に *auto-complete.el* がMELPAで更新されていました。

2ヶ月前に *less-css-mode* に対応し、
今回の更新で [[http://emacs.rubikitch.com/web-mode/][web-mode]] に対応しました。

これを使うと、タイプするだけで自動的に
補完候補がポップアップしてきます。

これがどういうものかは [[http://www.youtube.com/watch?v=rGVVnDxwJYE][YouTubeのデモ動画]] を見てください。

この前紹介した[[http://emacs.rubikitch.com/company/][company.el]] と機能的にはかぶりますが、
作者が日本人であることから、
日本ではこっちの方が知名度があります。

もちろん補完の方法はユーザが自由に作ることができます。

companyでは1つの関数を定義するだけでいいのですが、
auto-completeではanythingやhelmの情報源(source)
をモデリングしたデータ構造を定義します。

現時点では以下のメジャーモードに対応しています。

- *emacs-lisp-mode*
- *lisp-mode*
- *lisp-interaction-mode*
- *slime-repl-mode*
- *c-mode*
- *cc-mode*
- *c++-mode*
- *go-mode*
- *java-mode*
- *malabar-mode*
- *clojure-mode*
- *clojurescript-mode*
- *scala-mode*
- *scheme-mode*
- *ocaml-mode*
- *tuareg-mode*
- *coq-mode*
- *haskell-mode*
- *agda-mode*
- *agda2-mode*
- *perl-mode*
- *cperl-mode*
- *python-mode*
- *ruby-mode*
- *lua-mode*
- *tcl-mode*
- *ecmascript-mode*
- *javascript-mode*
- *js-mode*
- *js2-mode*
- *php-mode*
- *css-mode*
- *less-css-mode*
- *makefile-mode*
- *sh-mode*
- *fortran-mode*
- *f90-mode*
- *ada-mode*
- *xml-mode*
- *sgml-mode*
- *web-mode*
- *ts-mode*
- *sclang-mode*
- *verilog-mode*
- *qml-mode*

また、MELPAには以下のパッケージが存在します。

- *ac-anaconda*
- *ac-c-headers*
- *ac-cake*
- *ac-cake2*
- *ac-cider*
- *ac-dabbrev*
- *ac-dcd*
- *ac-emmet*
- *ac-etags*
- *ac-geiser*
- *ac-haskell-process*
- *ac-helm*
- *ac-inf-ruby*
- *ac-ispell*
- *ac-js2*
- *ac-math*
- *ac-octave*
- *ac-slime*
- *ac-sly*
- *auto-complete-auctex*
- *auto-complete-c-headers*
- *auto-complete-chunk*
- *auto-complete-clang*
- *auto-complete-clang-async*
- *auto-complete-exuberant-ctags*
- *auto-complete-nxml*
- *auto-complete-pcmp*
- *auto-complete-rst*
- *auto-complete-sage*

開発されてから5年が経過し、
対応しているメジャーモードがこれだけ増えたのだから、
使ってみる価値は十分にあります。

あなた好みの設定を見付け出してください。

[[http://cx4a.org/software/auto-complete/manual.ja.html][詳しい日本語マニュアル]] もあります。

# (progn (forward-line 1)(shell-command "screenshot-time.rb org_template" t))
** 設定 [[http://rubikitch.com/f/141105134632.auto-complete.el][141105134632.auto-complete.el(以下のコードと同一)]]
#+BEGIN: include :file "/r/sync/junk/141105/141105134632.auto-complete.el"
#+BEGIN_SRC fundamental
(require 'auto-complete-config)
(ac-config-default)
#+END_SRC

#+END:

** 実行方法
#+BEGIN_EXAMPLE
$ wget http://rubikitch.com/f/141105134632.auto-complete.el
$ emacs -Q -f package-initialize -l 141105134632.auto-complete.el
#+END_EXAMPLE

タイプしてしばらく待つと補完候補がポップアップしますので、
M-p/M-nで選択してください。

ポップアップ中でもカーソルが移動できるようにするために
C-p/C-nには割り当てられていません。
[includeme file="inc-package-relate.php" name="auto-complete"]
