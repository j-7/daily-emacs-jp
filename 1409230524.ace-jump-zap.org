#+BLOG: rubikitch
#+POSTID: 310
#+BLOG: rubikitch
#+DATE: [2014-09-23 Tue 05:24]
#+PERMALINK: ace-jump-zap
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil \n:t
#+ISPAGE: nil
#+DESCRIPTION:M-zをace-jump-modeで拡張する
# (progn (erase-buffer)(find-file-hook--org2blog/wp-mode))
#+BLOG: rubikitch
#+CATEGORY: zap-to-char
#+EL_PKG_NAME: ace-jump-zap
#+TAGS: ace-jump
#+EL_TITLE0: 【2014-12-09更新】zap-to-char(M-z)をace-jump化して自然に拡張する
#+begin: org2blog
#+TITLE: ace-jump-zap.el : 【2014-12-09更新】zap-to-char(M-z)をace-jump化して自然に拡張する
[includeme file="inc-package-table.php" name="ace-jump-zap" where="melpa"]

#+end:
** 概要
<2015-05-31 Sun> [[http://emacs.rubikitch.com/avy-zap][同等のものにavy化したavy-zapもあります。]]

<2014-12-09 Tue>更新 [[http://emacs.rubikitch.com/ace-jump-zap][前方の文字のみにヒントがつけられます。]]

<2015-01-24 Sat> [[http://emacs.rubikitch.com/zop-to-char/][類似品zop-to-charもあります。]]

あなたは、 *M-x zap-to-char (M-z)* というコマンドを知っていますか？

これは、カーソル位置から指定した文字までを削除するコマンドです。

でも、ある程度の距離を削除したいとき、M-zだと困ります。

というのは、指定した文字が目的地よりも前に登場していたときは
そこまでしか削除されないからです。

文字を指定する…といえば *ace-jump-mode* ですね！

*ace-jump-zap.el* は、M-zをace-jump化するものです。

2つのコマンドが定義されています。

- *M-x ace-jump-zap-to-char*
- *M-x ace-jump-zap-up-to-char*

M-x ace-jump-zap-to-charの方は、指定した文字「も」削除するのに対して、
M-x ace-jump-zap-up-to-charは指定した文字以前を削除します。

ちなみに *M-x zap-up-to-char* というコマンドは
存在していて(require 'misc)の後に使えます。

お好きな方をM-zにバインドしてください。

ちなみに僕は ace-jump-zap-up-to-char の方が好きです。

ace-jump-zap.elはMELPAに登録されたばかりなので、
これからが楽しみです。

# (progn (forward-line 1)(shell-command "screenshot-time.rb org_template" t))
[includeme file="inc-package-install.php" name="ace-jump-zap" where="melpa"]
** 設定 [[http://rubikitch.com/f/140923052957.el][140923052957.el(以下のコードと同一)]]
#+BEGIN: include :file "/r/sync/junk/140923/140923052957.el"
#+BEGIN_SRC fundamental
(global-set-key (kbd "M-z") 'ace-jump-zap-up-to-char)
#+END_SRC

#+END:

** 実行方法
#+BEGIN_EXAMPLE
$ wget http://rubikitch.com/f/140923052957.el
$ emacs -Q -f package-initialize -l 140923052957.el
#+END_EXAMPLE
[includeme file="inc-package-relate.php" name="ace-jump-zap"]
