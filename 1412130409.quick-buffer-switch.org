#+BLOG: rubikitch
#+POSTID: 479
#+BLOG: rubikitch
#+DATE: [2014-12-13 Sat 04:09]
#+PERMALINK: quick-buffer-switch
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil \n:t -:nil
#+ISPAGE: nil
#+DESCRIPTION:メジャーモードや正規表現にマッチするバッファを即選択できるようにする！が、helm-miniで十分な気がする
# (progn (erase-buffer)(find-file-hook--org2blog/wp-mode))
#+BLOG: rubikitch
#+CATEGORY: バッファ切り替え
#+EL_PKG_NAME: quick-buffer-switch
#+TAGS: helm
#+EL_TITLE0: 条件(特定のメジャーモードなど)を満たすバッファを即選択する！helmとともに
#+begin: org2blog
#+TITLE: quick-buffer-switch.el : 条件(特定のメジャーモードなど)を満たすバッファを即選択する！helmとともに
[includeme file="inc-package-table.php" name="quick-buffer-switch" where="melpa"]
** 概要

*quick-buffer-switch.el* は、特定の条件を満たす
ファイルやディレクトリを容易に開くことのできるパッケージです。

たとえばdiredだけ、emacs-lisp-modeだけ、
org-modeだけといった具合です。

ただ、単体では正直使いやすくありません。

なぜなら、候補選択は通常の *completing-read* が使われているため、
ミニバッファで補完という原始的なインターフェースだからです。

幸いなことにcompleting-readのインターフェースは
別なものにすりかえることができます。

現時点ではhelmが良いでしょう。

helmもインストールして
#+BEGIN_SRC emacs-lisp :results silent
(helm-mode 1)
#+END_SRC
を加えればhelmのインターフェースで選択できます。
[includeme file="inc-package-install.php" name="quick-buffer-switch" where="melpa"]

#+end:
helm推奨です。
M-x package-install helm

** 概要                                                             :noexport:

*quick-buffer-switch.el* は、特定の条件を満たす
ファイルやディレクトリを容易に開くことのできるパッケージです。

たとえばdiredだけ、emacs-lisp-modeだけ、
org-modeだけといった具合です。

ただ、単体では正直使いやすくありません。

なぜなら、候補選択は通常の *completing-read* が使われているため、
ミニバッファで補完という原始的なインターフェースだからです。

幸いなことにcompleting-readのインターフェースは
別なものにすりかえることができます。

現時点ではhelmが良いでしょう。

helmもインストールして
#+BEGIN_SRC emacs-lisp :results silent
(helm-mode 1)
#+END_SRC
を加えればhelmのインターフェースで選択できます。

** 設定 [[http://rubikitch.com/f/141213035150.quick-buffer-switch.1.el][141213035150.quick-buffer-switch.1.el(以下のコードと同一)]]
#+BEGIN: include :file "/r/sync/junk/141213/141213035150.quick-buffer-switch.1.el"
#+BEGIN_SRC fundamental
(require 'quick-buffer-switch)
(setq qbs-prefix-key "C-x C-c") ;プレフィクスキー、C-x C-cは潰していいよね
(qbs-init)
(helm-mode 1)                      ;helmなどを入れないと使いづらい
(qbs-add-predicates                ;カスタマイズするときに囲む必要ある
 ;; M-x qbs-ruby-modeを定義
 (make-qbs:predicate
    :name 'ruby-mode   ;名前
    :shortcut "r"      ;C-x C-c rに割り当て
    ;; enh-ruby-modeかruby-modeかつファイルバッファ
    :test '(and (memq major-mode '(enh-ruby-mode ruby-mode))
                qbs:buffer-file-name)))
#+END_SRC

#+END:

** 実行方法
#+BEGIN_EXAMPLE
$ wget http://rubikitch.com/f/141213035150.quick-buffer-switch.1.el
$ emacs -Q -f package-initialize -l 141213035150.quick-buffer-switch.1.el
#+END_EXAMPLE


** 最初に使えるコマンド
このようにいろいろな条件が予め定義されています。

けれどもこれらは覚える必要はなく、
使うものを適宜キーに割り当てたり
自分で定義した方がよいでしょう。

| C-x C-c C-h | 隠しバッファ               |M-x qbs-hidden-buffer 
| C-x C-c C-/ | 正規表現で絞り込み         |M-x qbs-matching-regexp
| C-x C-c C-d | dired                      |M-x qbs-directory
| C-x C-c C-f | ファイル                   |M-x qbs-file-name
| C-x C-c f   | ファイル                   |M-x qbs-file-buffer
| C-x C-c C-c | ファイルかディレクトリ     |M-x qbs-file-or-directory
| C-x C-c C-o | org-mode                   |M-x qbs-org-mode
| C-x C-c C-e | ERC                        |M-x qbs-erc
| C-x C-c C-g | Magit                      |M-x qbs-magit
| C-x C-c C-v | vcsh                       |M-x qbs-vcsh
| C-x C-c C-l | emacs-lisp-mode            |M-x qbs-emacs-lisp-mode
| C-x C-c C-i | HelpかInfo                 |M-x qbs-help-buffer
| C-x C-c C-b | ファイル・ディレクトリ以外 |M-x qbs-not-file-nor-directory
| C-x C-c C-p | プロセスバッファ           |M-x qbs-with-process
| C-x C-c C-v | shell-mode/term-mode       |M-x qbs-terminal
| C-x C-c C-r | リモートファイル           |M-x qbs-remote

本設定ではqbs-ruby-modeをC-x C-c rに割り当てる例を示しました。
# (progn (forward-line 1)(shell-command "screenshot-time.rb org_template" t))
http://rubikitch.com/f/20141213043511.png
Fig1: helmインターフェースでRubyのバッファを選択！

[includeme file="inc-package-relate.php" name="quick-buffer-switch"]
