#+BLOG: rubikitch
#+POSTID: 1054
#+BLOG: rubikitch
#+DATE: [2015-07-29 Wed 01:14]
#+PERMALINK: ido-at-point
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil \n:t -:nil
#+ISPAGE: nil
#+DESCRIPTION:
# (progn (erase-buffer)(find-file-hook--org2blog/wp-mode))
#+BLOG: rubikitch
#+CATEGORY: 入力支援
#+EL_PKG_NAME: ido-at-point
#+TAGS: 補完, ido, helm, マイナーモード
#+EL_TITLE0: シンボル補完(M-TAB)をido/helmで行うようにする！
#+EL_URL: 
#+begin: org2blog
#+TITLE: ido-at-point.el : シンボル補完(M-TAB)をido/helmで行うようにする！
[includeme file="inc-package-table.php" name="ido-at-point" where="melpa"]

#+end:
** 概要
*ido-at-point.el* は、シンボル補完(M-TAB)をidoで行うものです。


通常のEmacsの補完は古めかしくて使い勝手がいまいちですが、
migemoが絡まない補完ではあいまいマッチで絞り込めるidoが
かなり使いやすいと思います。

Emacs Lispプログラミングのお供に。

# (progn (forward-line 1)(shell-command "screenshot-time.rb org_template" t))
#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150729011959.png]]
Fig1: ここでM-TABを押すと補完候補がido選択できるようになる

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150729012005.png]]
Fig2: 絞り込んで…

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150729012009.png]]
Fig3: RETで確定！

[includeme file="inc-package-install.php" name="ido-at-point" where="melpa"]
** 設定 [[http://rubikitch.com/f/150729011240.el][150729011240.el(以下のコードと同一)]]
#+BEGIN: include :file "/r/sync/junk/150729/150729011240.el"
#+BEGIN_SRC fundamental
(ido-at-point-mode 1)
(setq ido-enable-flex-matching t)
#+END_SRC

#+END:

もしhelmで補完したければ以下の設定を書き加えてください。

僕はidoのままの方が使いやすいと思います。

#+BEGIN_SRC emacs-lisp :results silent
(require 'helm-mode)
(defun ido-at-point-read (choices common)
  (helm-comp-read "" choices
                  :initial-input common
                  :must-match t))

#+END_SRC


** 実行方法
#+BEGIN_EXAMPLE
$ wget http://rubikitch.com/f/150729011240.el
$ emacs -Q -f package-initialize -l 150729011240.el
#+END_EXAMPLE



[includeme file="inc-package-relate.php" name="ido-at-point"]
