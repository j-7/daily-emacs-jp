#+BLOG: rubikitch
#+POSTID: 245
#+BLOG: rubikitch
#+DATE: [2014-08-28 Thu 09:11]
#+PERMALINK: elmacro
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil \n:t
#+ISPAGE: nil
#+DESCRIPTION:キーボードマクロに名前をつけてコマンド化してinit.elに書けるようにする
# (progn (erase-buffer)(find-file-hook--org2blog/wp-mode))
#+BLOG: rubikitch
#+CATEGORY: キーボードマクロ
#+EL_PKG_NAME: elmacro
#+TAGS: 初心者安心
#+EL_TITLE0: キーボードマクロで超簡単に自作コマンドを作ろう！
#+begin: org2blog
#+TITLE: elmacro.el : キーボードマクロで超簡単に自作コマンドを作ろう！
[includeme file="inc-package-table.php" name="elmacro" where="melpa"]
** 概要
キーボードマクロ使っていますか？

キーボードマクロは一連のキー操作を覚えて
それを何度でも再現できるようにする仕組みです。

F3でマクロ記録開始→覚える操作→F4で記録終了
という流れです。

以後F4を押せば最後に記録したマクロを実行できます。

これだけだとキーボードマクロは1つしか使えないと思いがちですが、
M-x *name-last-kbd-macro* でキーボードマクロに名前をつければ
コマンドとして定義できます。

M-x *insert-kbd-macro* で名前をつけたキーボードマクロの内容を
Lisp式として書き下せるので、これをinit.elに貼り付ければ
Emacsを再起動しても使えます。

それをさらに便利にするのがこのelmacro.elです。

elmacro.elはキーボードマクロをEmacs Lispに変換します。
[includeme file="inc-package-install.php" name="elmacro" where="melpa"]

#+end:
** 概要                                                             :noexport:
キーボードマクロ使っていますか？

キーボードマクロは一連のキー操作を覚えて
それを何度でも再現できるようにする仕組みです。

F3でマクロ記録開始→覚える操作→F4で記録終了
という流れです。

以後F4を押せば最後に記録したマクロを実行できます。

これだけだとキーボードマクロは1つしか使えないと思いがちですが、
M-x *name-last-kbd-macro* でキーボードマクロに名前をつければ
コマンドとして定義できます。

M-x *insert-kbd-macro* で名前をつけたキーボードマクロの内容を
Lisp式として書き下せるので、これをinit.elに貼り付ければ
Emacsを再起動しても使えます。

それをさらに便利にするのがこのelmacro.elです。

elmacro.elはキーボードマクロをEmacs Lispに変換します。

** 注意:  [2014-08-28 Thu 10:18]追記
mewとの相性が悪いようです。

elmacro-modeを有効にした状態だと、
mewでSPCを押してもスクロールしません。
** 設定 [[http://rubikitch.com/f/140828091038.elmacro.el][140828091038.elmacro.el(以下のコードと同一)]]
#+BEGIN: include :file "/r/sync/junk/140828/140828091038.elmacro.el"
#+BEGIN_SRC fundamental
(require 'elmacro)
(elmacro-mode)
#+END_SRC

#+END:

** 実行方法
#+BEGIN_EXAMPLE
$ wget http://rubikitch.com/f/140828091038.elmacro.el
$ emacs -Q -f package-initialize -l 140828091038.elmacro.el
#+END_EXAMPLE
** 使用例
たとえば現在行を消してキルリングに入れるにはC-a C-k C-kを使います。

これをキーボードマクロとして記憶させるには
F3 C-a C-k C-k F4
と操作します。

コマンドに変換するにはここで M-x *elmacro-show-last-macro* を実行します。

すると、Emacs Lisp化されたキーボードマクロがポップアップします。

現時点では「(kmacro-end-or-call-macro nil)」の行が入ってくるバグがあるので
この部分は削除してください。

#+BEGIN_EXAMPLE
(defun kill-current-line ()
  "現在行を削除する"
  (interactive)
  (move-beginning-of-line 1)
  (kill-line nil)
  (kill-line nil))
#+END_EXAMPLE

なお、insert-kbd-macroではこのような定義になります。

#+BEGIN_EXAMPLE
(fset 'kill-current-line "\C-a\C-k\C-k")
#+END_EXAMPLE

# (progn (forward-line 1)(shell-command "screenshot-time.rb org_template" t))
http://rubikitch.com/f/20140828091640.png
Fig1: M-x elmacro-show-last-macro
[includeme file="inc-package-relate.php" name="elmacro"]
