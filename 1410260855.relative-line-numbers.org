#+BLOG: rubikitch
#+POSTID: 369
#+BLOG: rubikitch
#+DATE: [2014-10-26 Sun 08:55]
#+PERMALINK: relative-line-numbers
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil \n:t -:nil
#+ISPAGE: nil
#+DESCRIPTION:数引数つきのC-p/C-n/C-kとrelative-line-numbersは相性が良い
# (progn (erase-buffer)(find-file-hook--org2blog/wp-mode))
#+BLOG: rubikitch
#+CATEGORY: 行番号
#+EL_PKG_NAME: relative-line-numbers
#+TAGS: 
#+EL_TITLE0: カーソル前後の行を一瞬で処理する3つの方法！
#+begin: org2blog
#+TITLE: relative-line-numbers.el : カーソル前後の行を一瞬で処理する3つの方法！
[includeme file="inc-package-table.php" name="relative-line-numbers" where="melpa"]
** 概要
[[http://emacs.rubikitch.com/relative-line-numbers/][先日紹介]] した *relative-line-numbers.el* ですが、
便利な使い方を教えていただいたので記事にします。

これは相対行番号、つまり現在行からの距離を
左端に表示するelispです。

これが何に役立つかというと、 *数引数* 付きのC-p/C-n/C-kです。

この行数指定するときに相対行番号が書いてあると
ひと目でわかって、すぐにターゲット行がわかります！

C-pとC-nに数引数C-uをつければ、その行数だけ
前後の行に移動します。

たとえば4行前に行くときはC-u 4 C-pと操作します。

ここまでは知っている人が多いと思いますが、実は
「C-数字」や「M-数字」でも数引数がつけられます。

C-u 4 C-pの場合C-4 C-pで同じ効果です。

Ctrlを離さずに済むので楽ですね。

逆にC-4 C-nで4行後に移動します。

C-N C-kは現在行からN行kill(*kill-ring* に入れる)します。

たとえばC-2 C-kで現在行と次の行をkillします。

こういう操作を行うのにrelative-line-numbers.elは役に立ちます。

個人的には [[http://emacs.rubikitch.com/ace-jump-mode/][M-x ace-jump-line-mode]] や *isearch* を使うことが多いので、
あまり使っていない使い方でした。

標準状態のEmacsだと使えなさそうなコマンドも、
パッケージ追加により生き返るのはおもしろいですね！

@junkwさん、@imunolionさん、ありがとうございます。
[includeme file="inc-package-install.php" name="relative-line-numbers" where="melpa"]

#+end:
** 概要                                                             :noexport:
[[http://emacs.rubikitch.com/relative-line-numbers/][先日紹介]] した *relative-line-numbers.el* ですが、
便利な使い方を教えていただいたので記事にします。

これは相対行番号、つまり現在行からの距離を
左端に表示するelispです。

これが何に役立つかというと、 *数引数* 付きのC-p/C-n/C-kです。

この行数指定するときに相対行番号が書いてあると
ひと目でわかって、すぐにターゲット行がわかります！

C-pとC-nに数引数C-uをつければ、その行数だけ
前後の行に移動します。

たとえば4行前に行くときはC-u 4 C-pと操作します。

ここまでは知っている人が多いと思いますが、実は
「C-数字」や「M-数字」でも数引数がつけられます。

C-u 4 C-pの場合C-4 C-pで同じ効果です。

Ctrlを離さずに済むので楽ですね。

逆にC-4 C-nで4行後に移動します。

C-N C-kは現在行からN行kill(*kill-ring* に入れる)します。

たとえばC-2 C-kで現在行と次の行をkillします。

こういう操作を行うのにrelative-line-numbers.elは役に立ちます。

個人的には [[http://emacs.rubikitch.com/ace-jump-mode/][M-x ace-jump-line-mode]] や *isearch* を使うことが多いので、
あまり使っていない使い方でした。

標準状態のEmacsだと使えなさそうなコマンドも、
パッケージ追加により生き返るのはおもしろいですね！

@junkwさん、@imunolionさん、ありがとうございます。

** 設定 [[http://rubikitch.com/f/141020140339.relative-line-numbers.el][141020140339.relative-line-numbers.el(以下のコードと同一)]]
#+BEGIN: include :file "/r/sync/junk/141020/141020140339.relative-line-numbers.el"
#+BEGIN_SRC fundamental
(global-relative-line-numbers-mode)
#+END_SRC

#+END:

** 実行方法
#+BEGIN_EXAMPLE
$ wget http://rubikitch.com/f/141020140339.relative-line-numbers.el
$ emacs -Q -f package-initialize -l 141020140339.relative-line-numbers.el
#+END_EXAMPLE

# (progn (forward-line 1)(shell-command "screenshot-time.rb org_template" t))
http://rubikitch.com/f/20141020140507.png
Fig1: 相対行番号！
[includeme file="inc-package-relate.php" name="relative-line-numbers"]
