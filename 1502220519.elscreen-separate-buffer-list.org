#+BLOG: rubikitch
#+POSTID: 717
#+BLOG: rubikitch
#+DATE: [2015-02-22 Sun 05:19]
#+PERMALINK: elscreen-separate-buffer-list
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil \n:t -:nil
#+ISPAGE: nil
#+DESCRIPTION:elscreenをpersp-modeのように扱う。
# (progn (erase-buffer)(find-file-hook--org2blog/wp-mode))
#+BLOG: rubikitch
#+CATEGORY: ウィンドウ構成切り替え
#+EL_PKG_NAME: elscreen-separate-buffer-list
#+TAGS: elscreen
#+EL_TITLE0: 【elscreenワークスペース化】screenごとに独自のバッファリスト(プロジェクト)を持たせる
#+EL_URL: http://blog.wameiz.com/blog/2015/02/12/emacs-elscreen-separate-buffer-list/
#+begin: org2blog
#+TITLE: elscreen-separate-buffer-list.el : 【elscreenワークスペース化】screenごとに独自のバッファリスト(プロジェクト)を持たせる
[includeme file="inc-package-table.php" name="elscreen-separate-buffer-list" where="melpa"]

#+end:
** 概要
<2015-02-24 Tue> 設定を変更しました。
<2015-02-23 Mon> idoを使うようになったため、不具合が修正されました！！

[[http://emacs.rubikitch.com/persp-mode/][persp-mode.el(レビュー)]] はEmacsでワークスペースを提供しますが、
古くからある [[http://emacs.rubikitch.com/elscreen/][elscreen.el(レビュー)]] とは別のインターフェースです。

ワークスペースとはウィンドウ構成に加えて
個別のバッファリストをも保持しています。

元来elscreen.elにはウィンドウ構成をGNU Screen風に切り替えるものでしたが、
この *elscreen-separate-buffer-list.el* を導入すれば
screenごとのバッファリストを持たせられます。

いわばelscreenを *perspective* 化するものです。

perspectiveとは「視点・見通し」という意味があり、
現在のワークスペースにおいて選択できるバッファを限定することで
現在のタスクに視点を集中し、見通しを良くします。

こうすることで、Emacs内で複数のプロジェクトを動かしているときに、
そのプロジェクトに集中できるようになります。

C-z c(*M-x elscreen-create*) は
*scratch*と*Message*以外のバッファが見えない状態で
新しいscreenを作成するように変更されます。

対してC-z C(*M-x elscreen-clone*)は
元のscreenのバッファリストをコピーします。

なお、[[http://emacs.rubikitch.com/nadvice/][Emacs24.4で導入されたnadvice.el]] を使っているので、
Emacs24.4以降でないと動作しません。

[includeme file="inc-package-install.php" name="elscreen-separate-buffer-list" where="melpa"]
** バッファリストはidoレベルで制御
<2015-02-23 Mon> 更新

elscreen-separate-buffer-list.elも
perspective.elやpersp-mode.elと同様
idoが作るバッファリストを操作しています。

よって、buffer-list関数で全バッファが見えます。

それにより、標準のC-x C-b (*list-buffers*)や
*M-x ibuffer* や *M-x bs-show* では全バッファが見えます。

それに対し、 *ido-mode* を有効にした状態で
C-x bでバッファ選択(*ido-switch-buffer*)や
*ido-read-buffer* を呼べばscreenごとのバッファリストになります。

また、 *helm* のバッファリストはidoを介しているので、
*M-x helm-mini* や *M-x helm-buffers-list* では
screenごとのバッファリストが表示されます。

対して直接buffer-listを呼んでいる
*M-x anything-mini* や *M-x anything-buffers-list* は
全バッファが表示されます。

よって、elscreen-separate-buffer-list.elは
helmやidoと併用することが前提となります。

以前のバージョンでは直接 *buffer-list* 関数に
アドバイスをかけていましたが、
存在するバッファを存在しないものとみなされる不具合が生じていました。


** ワークスペースを永続化するには
Emacsでperspective(ワークスペース)を実現するには、
[[http://emacs.rubikitch.com/perspective/][perspective.el(レビュー)]] と [[http://emacs.rubikitch.com/persp-mode/][persp-mode.el]] がありますが、
前者は永続化できないのに対し、後者は永続化できます。

elscreen + elscreen-separate-buffer-list だと永続化できませんが、
さらに[[http://emacs.rubikitch.com/elscreen-persist/][elscreen-persist.el(レビュー)]] も導入すれば永続化できます。

それでも開いているファイルバッファまでは復元できないので、
ファイルバッファも復元したければ [[http://emacs.rubikitch.com/save-visited-files/][save-visited-files.el(レビュー)]] も
導入してください。

persp-mode.elはsave-visited-files.elのように
ファイルバッファも復元するので、
persp-mode.elと互角にするには以上の4つのelispを導入してください。

僕個人としてはバッファを削除しない派なので
save-visited-files.elの機能まではいらないです。

*recentf* (*M-x helm-mini* 等)でファイルをすぐに開いてしまいます。

# (progn (forward-line 1)(shell-command "screenshot-time.rb org_template" t))
** 設定 [[http://rubikitch.com/f/150222051252.elscreen-separate-buffer-list.el][150222051252.elscreen-separate-buffer-list.el(以下のコードと同一)]]
#+BEGIN: include :file "/r/sync/junk/150222/150222051252.elscreen-separate-buffer-list.el"
#+BEGIN_SRC fundamental
(setq elscreen-prefix-key (kbd "C-z"))
(elscreen-start)
;; (elscreen-persist-mode 1)
(elscreen-separate-buffer-list-mode 1)

#+END_SRC

#+END:

** 実行方法
#+BEGIN_EXAMPLE
$ wget http://rubikitch.com/f/150222051252.elscreen-separate-buffer-list.el
$ emacs -Q -f package-initialize -l 150222051252.elscreen-separate-buffer-list.el
#+END_EXAMPLE
[includeme file="inc-package-relate.php" name="elscreen-separate-buffer-list"]
