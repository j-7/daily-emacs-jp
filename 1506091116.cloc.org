#+BLOG: rubikitch
#+POSTID: 964
#+BLOG: rubikitch
#+DATE: [2015-06-09 Tue 11:16]
#+PERMALINK: cloc
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil \n:t -:nil
#+ISPAGE: nil
#+DESCRIPTION:
# (progn (erase-buffer)(find-file-hook--org2blog/wp-mode))
#+BLOG: rubikitch
#+CATEGORY: 解析ツール
#+EL_PKG_NAME: cloc
#+TAGS: 外部プログラム使用, use:perl
#+EL_TITLE0: バッファ中のプログラムを解析し空行・コメント行・コード行を数えて出力する
#+EL_URL: 
#+begin: org2blog
#+TITLE: cloc.el : バッファ中のプログラムを解析し空行・コメント行・コード行を数えて出力する
[includeme file="inc-package-table.php" name="cloc" where="melpa"]

#+end:
** 概要
*cloc.el* は[[http://cloc.sourceforge.net][cloc(sourceforge)]] のEmacsインターフェースです。

clocとは、与えられたソースコードを言語別に分類し、
空行・コメント行・コード行を出力するPerlスクリプトです。

*M-x cloc* を実行すると、ファイル名の正規表現を訊かれ、
開かれているバッファの各ファイル名においてclocを実行し、
エコーエリアに結果を表示します。

たとえば、elispファイル4つ、Ｃ言語ファイル1つが開かれていて
正規表現「.」を指定した場合は

#+BEGIN_EXAMPLE
      20 text files.
classified 20 files      20 unique files.                              
      16 files ignored.

http://cloc.sourceforge.net v 1.60  T=0.03 s (156.9 files/s, 395702.1 lines/s)
-------------------------------------------------------------------------------
Language                     files          blank        comment           code
-------------------------------------------------------------------------------
Lisp                             4            589           1174           5815
C                                1            782            693           3556
-------------------------------------------------------------------------------
SUM:                             5           1371           1867           9371
-------------------------------------------------------------------------------
#+END_EXAMPLE

となります。

*C-u M-x cloc* はカレントバッファにおいてclocを実行します。

clocの結果を属性リストとして得る
*cloc-get-results-as-plists* 関数も用意されています。

これはclocの結果を使ってelispで加工するときに便利です。
# (progn (forward-line 1)(shell-command "screenshot-time.rb org_template" t))
[includeme file="inc-package-install.php" name="cloc" where="melpa"]
[includeme file="inc-package-relate.php" name="cloc"]
