#+BLOG: rubikitch
#+POSTID: 514
#+BLOG: rubikitch
#+DATE: [2014-12-20 Sat 15:34]
#+PERMALINK: initsplit
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil \n:t -:nil
#+ISPAGE: nil
#+DESCRIPTION:特定のパッケージに関するカスタマイズ結果を別のファイルに追い出し、見通しを良くします。
# (progn (erase-buffer)(find-file-hook--org2blog/wp-mode))
#+BLOG: rubikitch
#+CATEGORY: init.el
#+EL_PKG_NAME: initsplit
#+TAGS: 設定ファイル
#+EL_TITLE0: M-x customizeの結果(custom-file)を変数名別に分ける
#+begin: org2blog
#+TITLE: initsplit.el : M-x customizeの結果(custom-file)を変数名別に分ける
[includeme file="inc-package-table.php" name="initsplit" where="melpa"]
** 概要
*initsplit.el* は、M-x customize等によるGUIでのカスタマイズ結果を
変数名別のファイルに分けます。

本来ならば *custom-file* にすべてのカスタマイズ結果が書き出されますが、
これを使うことで、特定のパッケージに関するカスタマイズ結果を
別のファイルに追い出し、見通しを良くします。

このように使います。

#+BEGIN_SRC emacs-lisp :results silent
(load "initsplit")
;; カスタマイズ結果のファイルをバイトコンパイルする
(setq custom-file "~/.emacs.d/settings.el")
;; orgとgnusのカスタマイズは別々のファイルに保存する
(setq initsplit-customizations-alist
  '(("^gnus-" "~/.emacs.d/gnus-settings.el")
    ("^org-" "~/.emacs.d/org-settings.el")))
(add-hook 'after-save-hook 'initsplit-byte-compile-files t)

;; 全カスタマイズファイルを読み込む
(load custom-file)
(load "~/.emacs.d/gnus-settings.el")
(load "~/.emacs.d/org-settings.el")
#+END_SRC
[includeme file="inc-package-install.php" name="initsplit" where="melpa"]

#+end:
** 概要                                                             :noexport:

*initsplit.el* は、M-x customize等によるGUIでのカスタマイズ結果を
変数名別のファイルに分けます。

本来ならば *custom-file* にすべてのカスタマイズ結果が書き出されますが、
これを使うことで、特定のパッケージに関するカスタマイズ結果を
別のファイルに追い出し、見通しを良くします。

このように使います。

#+BEGIN_SRC emacs-lisp :results silent
(load "initsplit")
;; カスタマイズ結果のファイルをバイトコンパイルする
(setq custom-file "~/.emacs.d/settings.el")
;; orgとgnusのカスタマイズは別々のファイルに保存する
(setq initsplit-customizations-alist
  '(("^gnus-" "~/.emacs.d/gnus-settings.el")
    ("^org-" "~/.emacs.d/org-settings.el")))
(add-hook 'after-save-hook 'initsplit-byte-compile-files t)

;; 全カスタマイズファイルを読み込む
(load custom-file)
(load "~/.emacs.d/gnus-settings.el")
(load "~/.emacs.d/org-settings.el")
#+END_SRC

** テストファイル [[http://rubikitch.com/f/initsplit-test.el][initsplit-test.el(以下のコードと同一)]]
どのような動作をするのかがわかりにくいかもしれないので、
パッケージの方でテストファイルが添付してあります。

以下の変数を定義し、ファイルに分けます。

- custom-file
- mac-command-modifier
- initsplit-customizations-alist
- apple
- boy
- cat
- dog

#+BEGIN: include :file "/r/sync/emacs/quelpa/build/initsplit/initsplit-test.el"
#+BEGIN_SRC fundamental
(message "testing")
(setq debug-on-error t)
(add-to-list 'load-path (file-name-directory load-file-name))
(custom-set-variables
 '(custom-file "/tmp/settings.el")
 '(mac-command-modifier 'meta)
 '(initsplit-customizations-alist
   '(("\\`a" "/tmp/a-settings.el")
     ("\\`b" "/tmp/b-settings.el")
     ("\\`[ac]" "/tmp/c-settings.el")
     ("\\`d" "/tmp/a-settings.el")))
 )
(require 'initsplit)

(defgroup test nil "")

(dolist (symbol '(apple boy cat dog))
  (eval `(defcustom ,symbol nil "doc" :group 'test))
  (set symbol t)
  (put symbol 'saved-value '(t)))

(custom-save-all)
(kill-emacs)
(customize-group "test")

;; expectations:
;; a-settings.el: apple, dog
;; b-settings.el: boy
;; c-settings.el: cat
#+END_SRC

#+END:


init.elを別ファイルに退避し、
initsplit-test.elをinit.elにして読み込むと、
以下のファイルが書き出されて終了します。

- /tmp/a-settings.el :: apple, dog
- /tmp/b-settings.el :: boy
- /tmp/c-settings.el :: cat
- /tmp/settings.el :: それ以外

これを見てわかるように、カスタマイズ結果をファイルに分けたら、
すべてのファイルを読み込む必要があることです。

[includeme file="inc-package-relate.php" name="initsplit"]
