#+BLOG: rubikitch
#+POSTID: 290
#+BLOG: rubikitch
#+DATE: [2014-09-12 Fri 08:24]
#+PERMALINK: ag
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil \n:t
#+ISPAGE: nil
#+DESCRIPTION:
# (progn (erase-buffer)(find-file-hook--org2blog/wp-mode))
#+BLOG: rubikitch
#+CATEGORY: 検索
#+EL_PKG_NAME: ag
#+TAGS: 外部プログラム使用, 正規表現, the_silver_searcher
#+EL_TITLE0: the silver search(ag)の素晴しいインターフェース
#+begin: org2blog
#+TITLE: ag.el : the silver search(ag)の素晴しいインターフェース
[includeme file="inc-package-table.php" name="ag" where="melpa"]

#+end:
** 概要
ag.elは超高速grepのagのEmacsインターフェースです。

以下のコマンドが用意されています。

- *M-x ag*
- *M-x ag-files*
- *M-x ag-regexp*
- *M-x ag-project*
- *M-x ag-project-files*
- *M-x ag-project-regexp*
- *M-x ag-dired*
- *M-x ag-dired-regexp*
- *M-x ag-project-dired*
- *M-x ag-project-dired-regexp*


これらはautoloadされているので、設定は不要です。

M-x agは検索文字列(正規表現ではない)とディレクトリを入力してag検索します。

デフォルトの検索文字列は賢く判定してくれます。
- regionが指定してあるときはregionの文字列
- それ以外は現在位置のシンボル

projectがついたコマンドは、検索ディレクトリを
現在の *プロジェクト* ディレクトリにします。

ag.elにおいてのプロジェクトとは、 *git* / *svn* / *hg* の
ルートディレクトリがデフォルトになっていますが、
*ag-project-root-function* を変更することでより賢くできます。

filesがついたコマンドでは検索対象のファイル名の正規表現を指定できます。

regexpがついたコマンドは文字列検索ではなくて
Perl準拠の正規表現(PCRE)検索となります。

diredがついたコマンドは、 *M-x find-dired* 似のファイル名検索です。

ですが、バージョン管理システムで無視されるファイル名は表示しません。

また、 *projectile.el* と連携することができ、
*C-c p s s*でag-regexpが使えます。

*ag-wgrep.el* と併用することで、 *wgrep.el* による
ag検索結果の編集ができます。

# (progn (forward-line 1)(shell-command "screenshot-time.rb org_template" t))
[includeme file="inc-package-install.php" name="ag" where="melpa"]
[includeme file="inc-package-relate.php" name="ag"]
