#+BLOG: rubikitch
#+POSTID: 427
#+BLOG: rubikitch
#+DATE: [2014-11-23 Sun 03:41]
#+PERMALINK: auto-save-buffers-enhanced
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil \n:t -:nil
#+ISPAGE: nil
#+DESCRIPTION:ファイルを自動保存して保存の手間を省き、データ消失を防ぐ。
# (progn (erase-buffer)(find-file-hook--org2blog/wp-mode))
#+BLOG: rubikitch
#+CATEGORY: 自動保存
#+EL_PKG_NAME: auto-save-buffers-enhanced
#+TAGS: セーフガード
#+EL_TITLE0: 【自動保存】Emacsから「ファイル保存」という概念を消し飛ばす。*scratch*も自動保存
#+begin: org2blog
#+TITLE: auto-save-buffers-enhanced.el : 【自動保存】Emacsから「ファイル保存」という概念を消し飛ばす。*scratch*も自動保存
[includeme file="inc-package-table.php" name="auto-save-buffers-enhanced" where="melpa"]
** 概要
<2015-02-03 Tue> [[http://emacs.rubikitch.com/real-auto-save/][real-auto-save.el]] という同じ機能のマイナーモードがあります。

*auto-save-buffers-enhanced.el* は、Emacsに本当の *自動保存* を提供します。

言い換えれば、ファイル保存というユーザ操作を消し飛ばします。

名前の通り、かつての *auto-save-buffers.el* の拡張版で、
現在はこちらの方のみMELPAに登録されています。

これをつか使えばもはや *C-x C-s* でファイルを保存する必要はありません。

/保存し忘れたからデータが飛んだ！/
というよくある事態とは未来永劫おさらばできます。

まあEmacsを使っていれば使いづらいものの
標準の *M-x recover-file* で取り戻せます。

Emacsではウン十年前から *auto-save* 機能が実装されているから、
今日日、保存忘れでデータが消えるアプリケーションは
嘲笑の対象ですな(笑)

とはいえこの機能は既存のファイル保存の概念を覆してしまうので
なかなか慣れないかもしれません。

*M-x auto-save-buffers-enhanced-toggle-activity* で、
この機能を一時的に無効にできます。

*CVS* 、 *Subversion* 、 *Git* リポジトリ内の
ファイルのみに適用することもできます。

もちろん [[http://emacs.rubikitch.com/backup-each-save/][backup-each-save.el]] と併用していると、
バックアップファイルが大量に作られます(笑)
[includeme file="inc-package-install.php" name="auto-save-buffers-enhanced" where="melpa"]

#+end:
** 概要                                                             :noexport:
<2015-02-03 Tue> [[http://emacs.rubikitch.com/real-auto-save/][real-auto-save.el]] という同じ機能のマイナーモードがあります。

*auto-save-buffers-enhanced.el* は、Emacsに本当の *自動保存* を提供します。

言い換えれば、ファイル保存というユーザ操作を消し飛ばします。

名前の通り、かつての *auto-save-buffers.el* の拡張版で、
現在はこちらの方のみMELPAに登録されています。

これをつか使えばもはや *C-x C-s* でファイルを保存する必要はありません。

/保存し忘れたからデータが飛んだ！/
というよくある事態とは未来永劫おさらばできます。

まあEmacsを使っていれば使いづらいものの
標準の *M-x recover-file* で取り戻せます。

Emacsではウン十年前から *auto-save* 機能が実装されているから、
今日日、保存忘れでデータが消えるアプリケーションは
嘲笑の対象ですな(笑)

とはいえこの機能は既存のファイル保存の概念を覆してしまうので
なかなか慣れないかもしれません。

*M-x auto-save-buffers-enhanced-toggle-activity* で、
この機能を一時的に無効にできます。

*CVS* 、 *Subversion* 、 *Git* リポジトリ内の
ファイルのみに適用することもできます。

もちろん [[http://emacs.rubikitch.com/backup-each-save/][backup-each-save.el]] と併用していると、
バックアップファイルが大量に作られます(笑)

** 設定 [[http://rubikitch.com/f/141123033929.auto-save-buffers-enhanced.el][141123033929.auto-save-buffers-enhanced.el(以下のコードと同一)]]
#+BEGIN: include :file "/r/sync/junk/141123/141123033929.auto-save-buffers-enhanced.el"
#+BEGIN_SRC fundamental
(require 'auto-save-buffers-enhanced)

;;; 1秒後に保存
(setq auto-save-buffers-enhanced-interval 1)
;;; 特定のファイルのみ有効にする
(setq auto-save-buffers-enhanced-include-regexps '(".+")) ;全ファイル
;; not-save-fileと.ignoreは除外する
(setq auto-save-buffers-enhanced-exclude-regexps '("^not-save-file" "\\.ignore$"))
;;; Wroteのメッセージを抑制
(setq auto-save-buffers-enhanced-quiet-save-p t)
;;; *scratch*も ~/.emacs.d/scratch に自動保存
(setq auto-save-buffers-enhanced-save-scratch-buffer-to-file-p t)
(setq auto-save-buffers-enhanced-file-related-with-scratch-buffer
      (locate-user-emacs-file "scratch"))
(auto-save-buffers-enhanced t)

;;; C-x a sでauto-save-buffers-enhancedの有効・無効をトグル
(global-set-key "\C-xas" 'auto-save-buffers-enhanced-toggle-activity)
#+END_SRC

#+END:
** バージョン管理システムに対応
以下の設定を加えれば、CVS、Subversion、Gitリポジトリ内の
ファイルのみに適用できます。

#+BEGIN_SRC emacs-lisp :results silent
;; If you're using CVS or Subversion or git
(auto-save-buffers-enhanced-include-only-checkout-path t)
(auto-save-buffers-enhanced t)
#+END_SRC


** 実行方法
#+BEGIN_EXAMPLE
$ wget http://rubikitch.com/f/141123033929.auto-save-buffers-enhanced.el
$ emacs -Q -f package-initialize -l 141123033929.auto-save-buffers-enhanced.el
#+END_EXAMPLE
[includeme file="inc-package-relate.php" name="auto-save-buffers-enhanced"]
