#+BLOG: rubikitch
#+POSTID: 847
#+BLOG: rubikitch
#+DATE: [2015-04-15 Wed 04:16]
#+PERMALINK: ntemacs64-emacs245
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil \n:t -:nil
#+ISPAGE: nil
#+DESCRIPTION:
# (progn (erase-buffer)(find-file-hook--org2blog/wp-mode))
#+BLOG: rubikitch
#+CATEGORY: リリース情報
#+DESCRIPTION: 
#+TITLE: 【NTEmacs64バージョンアップ】Windows用Emacs 24.5バイナリ登場！！
#+TAGS: Emacs 24.5以降
#+begin: org2blog-tags
# content-length: 1802

#+end:
https://github.com/chuntaro/NTEmacs64

[[http://emacs.rubikitch.com/emacs245-news/][4/11にEmacs24.5がリリースされました]] が、
NTEmacs64(*Windows版Emacs* (通称 *NTEmacs*) の *64bit版*)
の方もそれに対応されました。

Emacs 24.5はEmacs24.4のバグフィクスリリースなので、
大きな変更はなく、安心してアップグレードできます。

詳細は以下で確認できます。

https://github.com/chuntaro/NTEmacs64/blob/master/README.md

gnupack(32bit Cygwin Emacs)の方もそのうち更新されるでしょう。

以後、本サイトでの設定はEmacs24.4で導入された
[[http://emacs.rubikitch.com/nadvice/][nadvice.el]] などを積極的に使っていくことにします。


かねがね主張しているように、WindowsでEmacsをまともに動かすのは茨の道です。

GNU/Linuxと比べてたくさん苦労することは覚悟しておいてください。

[[http://emacs.rubikitch.com/ntemacs64/]]  より引用。

#+BEGIN_QUOTE
Emacsはスクリプト言語のように拡張ライブラリでガンガン拡張できるわけではなく、
外部プログラムを援用するポリシーを採っています。

これはソフトウェアのインストール・管理が簡単なUnix系OSならば正しいのですが、
Windowsではまさに地獄の宴に他なりません。

Windowsにおいては外部プログラム絡みが地雷になります。

Unix系のプログラムには様々なビルドがあるのも混乱の原因です。

Cygwin, MinGW, nativeとバイナリが多種に渡る上、
[[http://millkeyweb.com/win-chocolatey/][Chocolatey]] くらいしかパッケージシステムがなく、
インストール・管理がものすごい大変になるからです。

よって、外部プログラムに依存するelispをWindowsで動かすのは困難です。

ここで視点を変えてみてください。

「Windowsだと動かない部分がある」
という事実に目を向けるのではなくて、
「Windowsでも動いている部分がある」
という事実に目を向けてください。

『Emacsテクニックバイブル』執筆や、実際にWindows機を使った経験から、
Emacs Lispのみで書かれているものに対してはWindowsでもだいたい動くことが
わかっています。

様々な編集コマンド、
helm(anything)、
eshell、
dired、
org-mode…

これらは普通にWindowsでも動くではありませんか！


Emacs 24.4で標準添付となった組み込みブラウザewwも
そのままWindowsで動きます。

Emacsでブラウザといえば長らくemacs-w3mでしたが
w3mに依存せずともブラウザとして仕事してくれます。

eww-browse-url関数を使えば任意にURLを開いてくれます。

これを使えばプログラミング言語のオンラインマニュアルも楽勝で参照できます。

http://emacs.rubikitch.com/help-me-rubikitch-san 参照

これってすごいことだと思いませんか？

Windowsで使うコツとして現時点で言えることは、
- あまり設定に凝らない
- Unix系OSと同じように動かすことはあきらめる
- 外部プログラムに依存するEmacs Lispには極力手を出さない
ということです。

Emacs的に不自由なWindows環境で動かす以上、
無駄な苦労をするのは仕方ないです。

そういうものだと割切ってください。

#+END_QUOTE

# (progn (forward-line 1)(shell-command "screenshot-time.rb org_template" t))
