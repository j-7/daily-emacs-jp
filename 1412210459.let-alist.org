#+BLOG: rubikitch
#+POSTID: 516
#+BLOG: rubikitch
#+DATE: [2014-12-21 Sun 04:59]
#+PERMALINK: let-alist
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil \n:t -:nil
#+ISPAGE: nil
#+DESCRIPTION:alistの要素にドットつきシンボルでアクセスできるようにする
# (progn (erase-buffer)(find-file-hook--org2blog/wp-mode))
#+BLOG: rubikitch
#+CATEGORY: リスト操作
#+EL_PKG_NAME: let-alist
#+TAGS: マクロ, ソース解読推奨
#+EL_TITLE0: 【Emacs 25から標準】alistの要素にシンボルでアクセスするマクロ！
#+begin: org2blog
#+TITLE: let-alist.el : 【Emacs 25から標準】alistの要素にシンボルでアクセスするマクロ！
[includeme file="inc-package-table.php" name="let-alist" where="gnu"]

#+end:
** 概要
初めて本家ELPAにあるパッケージを紹介します。

*let-alist* マクロは、 *連想リスト* (*alist*) の
アクセスを劇的に簡単にします。

読み取りのみで、文字列には対応していません。

こういうマクロがあると本当に助かりますね。

[includeme file="inc-package-install.php" name="let-alist" where="gnu"]
** 使用例 [[http://rubikitch.com/f/141221045657.let-alist.el][141221045657.let-alist.el(以下のコードと同一)]]
#+BEGIN: include :file "/r/sync/junk/141221/141221045657.let-alist.el"
#+BEGIN_SRC fundamental
(require 'let-alist)
(setq alist '((foo . "FOO")
              (bar . "BAR")
              ("baz" . "not used")))
;;; assq/cdrを使っていたのが
(let ((.foo (cdr (assq 'foo alist)))
      (.bar (cdr (assq 'bar alist))))
  (cons .foo .bar))                     ; => ("FOO" . "BAR")
;;; あっさり！ .つきのシンボルでアクセスできる！！
(let-alist alist
  (cons .foo .bar))                     ; => ("FOO" . "BAR")
;;; 文字列で使えないのが残念でならない。亜種が欲しいところ。
(let-alist alist
  .baz)                                 ; => nil
;;; 残念ながら書き込みはできない
(let-alist alist
  (setf .foo 100)
  alist)                                ; => ((foo . "FOO") (bar . "BAR") ("baz" . "not used"))
#+END_SRC

#+END:


[includeme file="inc-package-relate.php" name="let-alist"]
