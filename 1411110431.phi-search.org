#+BLOG: rubikitch
#+POSTID: 402
#+BLOG: rubikitch
#+DATE: [2014-11-11 Tue 04:31]
#+PERMALINK: phi-search
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil \n:t -:nil
#+ISPAGE: nil
#+DESCRIPTION:multiple-cursors専用isearch・置換
# (progn (erase-buffer)(find-file-hook--org2blog/wp-mode))
#+BLOG: rubikitch
#+CATEGORY: 複数のカーソル
#+EL_PKG_NAME: phi-search
#+TAGS: 正規表現
#+EL_TITLE0: 【2015-04-06更新】multiple-cursorsでisearch・正規表現置換できるよ！
#+EL_URL: http://hins11.jugem.jp/?eid=38
#+begin: org2blog
#+TITLE: phi-search.el : 【2015-04-06更新】multiple-cursorsでisearch・正規表現置換できるよ！
[includeme file="inc-package-table.php" name="phi-search" where="melpa"]
** 概要
<2015-04-06 Mon>更新 生まれ変わりました！！！

*phi-search.el* は[[http://emacs.rubikitch.com/multiple-cursors/][multiple-cursors.el(レビュー)]]  対応の
独自実装 *isearch* です。

multiple-cursors.el とは、カーソルを複数に分身させる強力機能で、
置換を超えた編集操作が可能になります。

multiple-cursors.elを使っているならば、無設定でC-sとC-rが使えるので
ぜひともインストールしましょう。

*M-x phi-search* の特徴は、isearchの操作性を模倣し、
検索しながらC-v/M-C-vでスクロールできる点です。

それにより、C-sで検索→C-vでスクロール→C-sで再検索
ということができます。

また、 *anzu* のようにマッチ数も表示してくれます。

初期レビュー時にはケチョンケチョンに書きましたが(笑)、
今では[[http://emacs.rubikitch.com/phi-search-migemo/][phi-search-migemo.el(レビュー)]] で[[http://emacs.rubikitch.com/migemo/][Migemo(レビュー)]] 化され
2015-01-13のバージョン2.2.0からはミニバッファで完結するようになり、
本家isearchに近づきました。

[[http://emacs.rubikitch.com/phi-search-dired/][phi-search-dired.el(レビュー)]] はphi-searchを使って
diredのファイル絞り込み・マークできます。

現在はisearchとして違和感ないインターフェースにまで成長し、
破壊的な威力を秘めたmultiple-cursors.elの専属isearchであり、
dired内の強力な検索コマンドのベースとなっています。

/まさに縁の下の力持ちです。/

http://rubikitch.com/f/20141111043856.png
Fig1: M-x phi-search旧インターフェース

[[file:/r/sync/screenshots/20150406052147.png]]
Fig2: M-x phi-search新インターフェース

[includeme file="inc-package-install.php" name="phi-search" where="melpa"]

#+end:
** 概要                                                             :noexport:
<2015-04-06 Mon>更新 生まれ変わりました！！！

*phi-search.el* は[[http://emacs.rubikitch.com/multiple-cursors/][multiple-cursors.el(レビュー)]]  対応の
独自実装 *isearch* です。

multiple-cursors.el とは、カーソルを複数に分身させる強力機能で、
置換を超えた編集操作が可能になります。

multiple-cursors.elを使っているならば、無設定でC-sとC-rが使えるので
ぜひともインストールしましょう。

*M-x phi-search* の特徴は、isearchの操作性を模倣し、
検索しながらC-v/M-C-vでスクロールできる点です。

それにより、C-sで検索→C-vでスクロール→C-sで再検索
ということができます。

また、 *anzu* のようにマッチ数も表示してくれます。

初期レビュー時にはケチョンケチョンに書きましたが(笑)、
今では[[http://emacs.rubikitch.com/phi-search-migemo/][phi-search-migemo.el(レビュー)]] で[[http://emacs.rubikitch.com/migemo/][Migemo(レビュー)]] 化され
2015-01-13のバージョン2.2.0からはミニバッファで完結するようになり、
本家isearchに近づきました。

[[http://emacs.rubikitch.com/phi-search-dired/][phi-search-dired.el(レビュー)]] はphi-searchを使って
diredのファイル絞り込み・マークできます。

現在はisearchとして違和感ないインターフェースにまで成長し、
破壊的な威力を秘めたmultiple-cursors.elの専属isearchであり、
dired内の強力な検索コマンドのベースとなっています。

/まさに縁の下の力持ちです。/

http://rubikitch.com/f/20141111043856.png
Fig3: M-x phi-search旧インターフェース

[[file:/r/sync/screenshots/20150406052147.png]]
Fig4: M-x phi-search新インターフェース


** phi-replaceで置換も
*M-x phi-replace-query* で
[[http://emacs.rubikitch.com/visual-regexp/][visual-regexp.el(レビュー)]] のように置換結果を見ながら置換もできます。

*M-x re-builder* と正規表現置換を組み合わせた方法です。

ただ、現時点においてはM-pで過去の置換文字列を辿れない欠点があります。

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150406053333.png]]
Fig5: M-x phi-replace-query で置換元bufferを入力

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150406053339.png]]
Fig6: 置換先BUFを入力

# (progn (forward-line 1)(shell-command "screenshot-time.rb org_template" t))

# /r/sync/screenshots/20150406052147.png http://rubikitch.com/wp-content/uploads/2015/04/wpid-201504060521471.png
# /r/sync/screenshots/20150406053333.png http://rubikitch.com/wp-content/uploads/2015/04/wpid-201504060533331.png
# /r/sync/screenshots/20150406053339.png http://rubikitch.com/wp-content/uploads/2015/04/wpid-201504060533391.png
[includeme file="inc-package-relate.php" name="phi-search"]
