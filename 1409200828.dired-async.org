#+BLOG: rubikitch
#+POSTID: 304
#+BLOG: rubikitch
#+DATE: [2014-09-20 Sat 08:28]
#+PERMALINK: dired-async
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil \n:t
#+ISPAGE: nil
#+DESCRIPTION:diredのファイル操作を非同期化することで待たされなくする
# (progn (erase-buffer)(find-file-hook--org2blog/wp-mode))
#+BLOG: rubikitch
#+CATEGORY: 高速化
#+EL_PKG_NAME: async
#+TAGS: dired, 非同期処理
#+EL_TITLE0: diredでのコピーなどをバックグラウンドで行うたった1行の設定
#+begin: org2blog
#+TITLE: async.el : diredでのコピーなどをバックグラウンドで行うたった1行の設定
[includeme file="inc-package-table.php" name="async" where="melpa"]

#+end:
** 概要
diredではファイルをコピーや移動などができますが、
大きいファイルを処理したりリモートに転送するときは
どうしても待たされてしまいます。

そういうときはどうしてもdiredを使うのをためらってしまいますね。

でも大丈夫！asyncパッケージに含まれている *dired-async.el* を読み込めば、
ファイル処理を非同期にやってくれるようになります。

設定は簡単で、requireするだけです。

あとはいつも通りdiredでコピーしてください。
[includeme file="inc-package-install.php" name="async" where="melpa"]
** 設定 [[http://rubikitch.com/f/140920083408.dired-async.el][140920083408.dired-async.el(以下のコードと同一)]]
#+BEGIN: include :file "/r/sync/junk/140920/140920083408.dired-async.el"
#+BEGIN_SRC fundamental
(eval-after-load "dired-aux" '(require 'dired-async))
#+END_SRC

#+END:

** 実行方法
#+BEGIN_EXAMPLE
$ wget http://rubikitch.com/f/140920083408.dired-async.el
$ emacs -Q -f package-initialize -l 140920083408.dired-async.el
#+END_EXAMPLE

# (progn (forward-line 1)(shell-command "screenshot-time.rb org_template" t))
[includeme file="inc-package-relate.php" name="async"]
