#+BLOG: rubikitch
#+POSTID: 326
#+BLOG: rubikitch
#+DATE: [2014-10-02 Thu 14:19]
#+PERMALINK: ruby-hash-syntax
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil \n:t
#+ISPAGE: nil
#+DESCRIPTION:両ハッシュ記法を切替える { :foo => 1, :bar => 2, :baz => 3,} ←→ { foo: 1, bar: 2, baz: 3,}

# (progn (erase-buffer)(find-file-hook--org2blog/wp-mode))
#+BLOG: rubikitch
#+CATEGORY: Ruby支援
#+EL_PKG_NAME: ruby-hash-syntax
#+TAGS: 
#+EL_TITLE0: RubyのHashのを1.9以降で使える新記法に切り替える
#+begin: org2blog
#+TITLE: ruby-hash-syntax.el : RubyのHashのを1.9以降で使える新記法に切り替える
[includeme file="inc-package-table.php" name="ruby-hash-syntax" where="melpa"]

#+end:
** 概要
Ruby 1.9以降でHashの書き方が増えました。

以下のようにHashのキーがSymbolの場合、=>の代わりに:が使えます。

#+BEGIN_SRC ruby :results xmp silent
# 従来の書き方
{ :foo => 1, :bar => 2, :baz => 3,}
# Ruby 1.9以降使える書き方
{ foo: 1, bar: 2, baz: 3,}
#+END_SRC

好みの問題があるとは思いますが、
新記法の方が短くてかっこいいのではないでしょうか？

*ruby-hash-syntax.el* は、両者の記法を切り替えるEmacs Lispです。

元々 *TextMate* に存在する機能ですが、Emacsへ移植されました。

使い方はHashを *C-M-SPC (mark-sexp)* などでregionに設定してから、
*M-x ruby-toggle-hash-syntax* を実行します。

記法は自動判別するので、
旧記法→新記法、新記法→旧記法と
切り替えてくれます。

ただし、旧記法でキーがすべてSymbolでないとエラーになるので注意です。

autoloadされているので設定は不要です。
# (progn (forward-line 1)(shell-command "screenshot-time.rb org_template" t))
[includeme file="inc-package-install.php" name="ruby-hash-syntax" where="melpa"]
[includeme file="inc-package-relate.php" name="ruby-hash-syntax"]
