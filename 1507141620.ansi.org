#+BLOG: rubikitch
#+POSTID: 1026
#+BLOG: rubikitch
#+DATE: [2015-07-14 Tue 16:20]
#+PERMALINK: ansi
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil \n:t -:nil
#+ISPAGE: nil
#+DESCRIPTION:
# (progn (erase-buffer)(find-file-hook--org2blog/wp-mode))
#+BLOG: rubikitch
#+CATEGORY: 文字列操作
#+EL_PKG_NAME: ansi
#+TAGS: 
#+EL_TITLE0: ANSIエスケープシーケンスをつける関数群
#+EL_URL: 
#+begin: org2blog
#+TITLE: ansi.el : ANSIエスケープシーケンスをつける関数群
[includeme file="inc-package-table.php" name="ansi" where="melpa"]

#+end:
** 概要
*ansi.el* は文字列にANSIエスケープシーケンスを付加する関数群です。

端末の文字に色をつけたくてもエスケープシーケンスを忘れた場合に
役立つことでしょう。

以下のように使います。

#+BEGIN_SRC emacs-lisp :results silent
;; 文字色
(ansi-red "foo")                        ; => "\e[31mfoo\e[0m"
(ansi-blue "bar")                       ; => "\e[34mbar\e[0m"

;; 背景色
(ansi-on-red "foo")                     ; => "\e[41mfoo\e[0m"
(ansi-on-blue "bar")                    ; => "\e[44mbar\e[0m"

;; スタイル
(ansi-bold "foo")                       ; => "\e[1mfoo\e[0m"
(ansi-blink "bar")                      ; => "\e[5mbar\e[0m"

;;; DSL化！with-ansiでansi-プレフィクスを省略できる
;; 文字色
(with-ansi
 (red "foo")                            ; => "\e[31mfoo\e[0m"
 (blue "bar")                           ; => "\e[34mbar\e[0m"
 )

;; 背景色
(with-ansi
 (on-red "foo")                         ; => "\e[41mfoo\e[0m"
 (on-blue "bar")                        ; => "\e[44mbar\e[0m"
 )

;; スタイル
(with-ansi
 (bold "foo")                           ; => "\e[1mfoo\e[0m"
 (blink "bar")                          ; => "\e[5mbar\e[0m"
 )

;;; format + ansi-XXX
(ansi-apply 'red "foo %s" "bar")        ; => "\e[31mfoo bar\e[0m"

;;; カーソル移動
(ansi-up)                               ; => "\e[1A"
(ansi-down 3)                           ; => "\e[3B"
(ansi-csi-apply 'forward)               ; => "\e[1C"
(ansi-csi-apply "J" 10)                 ; => "\e[10J"

;;; ネスト可能
(ansi-bold
 (ansi-red (ansi-blink "foo bar")))
;; => "\e[1m\e[31m\e[5mfoo bar\e[0m\e[0m\e[0m"
(with-ansi
 (bold (red (blink "foo bar"))))
;; => "\e[1m\e[31m\e[5mfoo bar\e[0m\e[0m\e[0m"
#+END_SRC

eshellはある程度エスケープシーケンスに対応しているので、
色を確かめられます。



# (progn (forward-line 1)(shell-command "screenshot-time.rb org_template" t))
#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150714163754.png]]
Fig1: eshellで動作確認

[includeme file="inc-package-install.php" name="ansi" where="melpa"]
[includeme file="inc-package-relate.php" name="ansi"]
