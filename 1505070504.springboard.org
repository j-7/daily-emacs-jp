#+BLOG: rubikitch
#+POSTID: 895
#+BLOG: rubikitch
#+DATE: [2015-05-07 Thu 05:04]
#+PERMALINK: springboard
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil \n:t -:nil
#+ISPAGE: nil
#+DESCRIPTION:
# (progn (erase-buffer)(find-file-hook--org2blog/wp-mode))
#+BLOG: rubikitch
#+CATEGORY: Emacsコマンド実行
#+EL_PKG_NAME: springboard
#+TAGS: helm, ido
#+EL_TITLE0: M-!やM-x grepなどの実行時のカレントディレクトリを変更する
#+EL_URL: 
#+begin: org2blog
#+TITLE: springboard.el : M-!やM-x grepなどの実行時のカレントディレクトリを変更する
[includeme file="inc-package-table.php" name="springboard" where="melpa"]

#+end:
idoでも使いたい人はido-springboardもインストールする。

M-x package-install ido-springboard


** 概要
*M-!* を使えば手軽にシェルコマンドを実行できますが、
実行したいカレントディレクトリが違っていると面倒です。

*M-x grep* などについても同様です。

たった1回だけ、次のコマンドのみカレントディレクトリを変更できたら…
と思ったことはきっとあるはず！

*springboard.el* が提供する *M-x springboard* は、
次に実行するコマンドのカレントディレクトリ
(*default-directory*)を変更してくれます。

いきなり *helm* の画面が出てきて面喰らうかもしれませんが、
標準コマンドは素通りするようになっているので、
落ち着いてM-!やM-xなどを押してください。

ここでRETを押せばdiredが出てきます。

M-x springboardの優れた点は、なによりも
カレントディレクトリをフルパスで入力する必要がないことです。

経験上、実行したいカレントディレクトリというのは
すでに開いたバッファか最近開いたファイルに関係することがほとんどなので、
予め *buffer-list* や *recentf-list* から
カレントディレクトリの候補を集めてくれます。

また、よく使うディレクトリのリストを
*springboard-directories* に設定することもできます。

M-x springboardが気に入れば、キーに割り当てることをおすすめします。

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150507052855.png]]
Fig1: M-x springboardすると候補がhelmで出てくる

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150507052904.png]]
Fig2: 入力してくと絞られる

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150507052915.png]]
Fig3: そこでおもむろにM-x grepと入力すると

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150507052924.png]]
Fig4: そのディレクトリで実行できるのである！！


ただ、helm的にはM-x helm-miniやM-x helm-find-filesなどから
直接M-!やM-xなどを実行した方がスマートだと思います。

せっかくhelmなんですからねー。

[includeme file="inc-package-install.php" name="springboard" where="melpa"]
** 設定 [[http://rubikitch.com/f/150507052428.springboard.el][150507052428.springboard.el(以下のコードと同一)]]
#+BEGIN: include :file "/r/sync/junk/150507/150507052428.springboard.el"
#+BEGIN_SRC fundamental
;;; よく使うディレクトリを予め登録する
(setq springboard-directories '("/usr/local"))
;;; 以下のキーをhelm-mapから取り除き、次の実行コマンドに渡す
(setq springboard-passthrough-keys '([(control ?x)] [open]))
(springboard-apply-passthrough-keys)    ;変更したらこの式も評価する
;;; recentfから取得するには有効にする必要がある
(recentf-mode 1)
;;; idoでバッファ選択したときにも同じように操作できるようにする
(require 'ido-springboard nil t)
#+END_SRC

#+END:

** 実行方法
#+BEGIN_EXAMPLE
$ wget http://rubikitch.com/f/150507052428.springboard.el
$ emacs -Q -f package-initialize -l 150507052428.springboard.el
#+END_EXAMPLE
** 応用可能
このディレクトリリストを得るヒューリスティックなアプローチは
素晴しいので、次に実行するコマンドのカレントディレクトリを変更するだけでなく
shell/eshellのcdの候補にしたりなど応用できるでしょう。

以下のコードを使うだけでそれが他の場所で再利用できます。

#+BEGIN_SRC emacs-lisp :results silent
(helm-comp-read
 "Springboard: " springboard-directories
 :test #'file-directory-p
 :buffer "*Springboard*"
 :history (springboard-current-history)
 :input-history 'springboard-history
 :keymap springboard-map
 :persistent-action #'dired)
#+END_SRC

思えば僕も初心者時代にspringboardのようなコマンドを作ったものの
ほとんど使ったことがなかったのでした…
# (progn (forward-line 1)(shell-command "screenshot-time.rb org_template" t))

# /r/sync/screenshots/20150507052855.png http://rubikitch.com/wp-content/uploads/2015/05/wpid-20150507052855.png
# /r/sync/screenshots/20150507052904.png http://rubikitch.com/wp-content/uploads/2015/05/wpid-20150507052904.png
# /r/sync/screenshots/20150507052915.png http://rubikitch.com/wp-content/uploads/2015/05/wpid-20150507052915.png
# /r/sync/screenshots/20150507052924.png http://rubikitch.com/wp-content/uploads/2015/05/wpid-20150507052924.png
[includeme file="inc-package-relate.php" name="springboard"]
