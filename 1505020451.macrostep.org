#+BLOG: rubikitch
#+POSTID: 883
#+BLOG: rubikitch
#+DATE: [2015-05-02 Sat 04:51]
#+PERMALINK: macrostep
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil \n:t -:nil
#+ISPAGE: nil
#+DESCRIPTION:
# (progn (erase-buffer)(find-file-hook--org2blog/wp-mode))
#+BLOG: rubikitch
#+CATEGORY: デバッグ
#+EL_PKG_NAME: macrostep
#+TAGS: マクロ
#+EL_TITLE0: 【コードリーディング支援】elispのマクロ展開をその場で順番に眺める
#+EL_URL: 
#+begin: org2blog
#+TITLE: macrostep.el : 【コードリーディング支援】elispのマクロ展開をその場で順番に眺める
[includeme file="inc-package-table.php" name="macrostep" where="melpa"]

#+end:
** 概要
Lispのマクロはとても強力で、制御構造すら隠蔽できてしまいます。

もちろんelispだって例外ではありません。

マクロは何度も「展開」され、
最終的にはスペシャルフォームと関数のみになります。

マクロは便利さの反面、デバッグが困難になるという代償が伴います。

マクロのデバッグの際には展開の様子を見ていくのがいいです。

マクロがどのように展開されるかについては
 *macroexpand* という関数を使えばわかりますが、
デバッグの際に使おうにもわざわざコピーして貼り付けるのでは面倒です。

*macrostep.el* は、emacs-lisp-modeのバッファの中で
その場でマクロ展開の様子を見られるようにします。

*macrolet* や *cl-macrolet* によるローカルマクロにも対応しています。

elispプログラマならば常備したいところです。
[includeme file="inc-package-install.php" name="macrostep" where="melpa"]
** 使い方
C-c eを押してマクロ展開状態にします。

この状態で以下のキーが使えます。

- e - さらに展開
- u - 展開した部分を閉じる
- p - 次のマクロを選択する
- n - 前のマクロを選択する
- q - macrostepを終了する

C-c e e ...と操作すると最終的にはマクロが
すべて展開された状態が見られます。

理解できないマクロを展開するのに使ってみてください。

知ってました？
defunって実はdefaliasで定義されたマクロなんですよ！！

# (progn (forward-line 1)(shell-command "screenshot-time.rb org_template" t))
#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150502050552.png]]
Fig1: 初期状態

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150502050557.png]]
Fig2: C-c eでマクロを1段階展開！

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150502050609.png]]
Fig3: pやnで次に展開するマクロを選択できる

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150502050632.png]]
Fig4: dolistをさらに展開

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150502051548.png]]
Fig5: macroletやcl-macroletで定義されたローカルマクロにも対応！

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150502051554.png]]
Fig6: C-c eで展開！



** 設定 [[http://rubikitch.com/f/150502050134.macrostep.el][150502050134.macrostep.el(以下のコードと同一)]]
#+BEGIN: include :file "/r/sync/junk/150502/150502050134.macrostep.el"
#+BEGIN_SRC fundamental
(define-key emacs-lisp-mode-map (kbd "C-c e") 'macrostep-expand)
#+END_SRC

#+END:

** 実行方法
#+BEGIN_EXAMPLE
$ wget http://rubikitch.com/f/150502050134.macrostep.el
$ emacs -Q -f package-initialize -l 150502050134.macrostep.el
#+END_EXAMPLE

# /r/sync/screenshots/20150502050552.png http://rubikitch.com/wp-content/uploads/2015/05/wpid-20150502050552.png
# /r/sync/screenshots/20150502050557.png http://rubikitch.com/wp-content/uploads/2015/05/wpid-20150502050557.png
# /r/sync/screenshots/20150502050609.png http://rubikitch.com/wp-content/uploads/2015/05/wpid-20150502050609.png
# /r/sync/screenshots/20150502050632.png http://rubikitch.com/wp-content/uploads/2015/05/wpid-20150502050632.png
# /r/sync/screenshots/20150502051548.png http://rubikitch.com/wp-content/uploads/2015/05/wpid-20150502051548.png
# /r/sync/screenshots/20150502051554.png http://rubikitch.com/wp-content/uploads/2015/05/wpid-20150502051554.png
[includeme file="inc-package-relate.php" name="macrostep"]
