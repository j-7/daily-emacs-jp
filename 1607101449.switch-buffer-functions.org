#+BLOG: rubikitch
#+POSTID: 1459
#+BLOG: rubikitch
#+DATE: [2016-07-10 Sun 14:49]
#+PERMALINK: switch-buffer-functions
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil \n:t -:nil
#+ISPAGE: nil
#+DESCRIPTION:
# (progn (erase-buffer)(find-file-hook--org2blog/wp-mode))
#+BLOG: rubikitch
#+CATEGORY: カスタマイズ
#+EL_PKG_NAME: switch-buffer-functions
#+TAGS: ソース解読推奨
#+EL_TITLE0: 【ありそうでなかった】バッファ切り替え時に実行されるフック
#+EL_URL: 
#+begin: org2blog
#+TITLE: switch-buffer-functions.el : 【ありそうでなかった】バッファ切り替え時に実行されるフック
[includeme file="inc-package-table.php" name="switch-buffer-functions" where="melpa"]

#+end:
** 概要
switch-buffer-functions.elは同名のhookを提供する超短いelispです。
*window-configuration-change-hook* というウィンドウ構成が変更されたときに実行されるフックは用意されているものの、なぜかカレントバッファを変更したときに実行されるフックは用意されていません。
そこで、このパッケージをインストールすると *switch-buffer-functions* というフックによってカレントバッファの変更を追跡できます。
インストールした時点でフックが使えるようになっているので、requireは不要です。

以下のように使用します。

#+BEGIN_SRC emacs-lisp :results silent
(add-hook 'switch-buffer-functions
          (lambda (prev cur) (message "%S -> %S" prev cur)))
#+END_SRC

フックの関数は2引数関数となっていて、直前のバッファとカレントバッファを引数にとります。

上記の設定ならば

#+BEGIN_EXAMPLE
#<buffer *eshell*> -> #<buffer README.adoc>
#+END_EXAMPLE

などとエコーエリアに表示されます。

なお、このelisp自体が各コマンド実行後に実行されるフック *post-command-hook* を用いた簡単な例になっているので、興味ある方は読んでみてください。
# (progn (forward-line 1)(shell-command "screenshot-time.rb org_template" t))
[includeme file="inc-package-install.php" name="switch-buffer-functions" where="melpa"]
[includeme file="inc-package-relate.php" name="switch-buffer-functions"]
