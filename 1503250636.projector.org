#+BLOG: rubikitch
#+POSTID: 782
#+BLOG: rubikitch
#+DATE: [2015-03-25 Wed 06:36]
#+PERMALINK: projector
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil \n:t -:nil
#+ISPAGE: nil
#+DESCRIPTION:
# (progn (erase-buffer)(find-file-hook--org2blog/wp-mode))
#+BLOG: rubikitch
#+CATEGORY: プログラム実行
#+EL_PKG_NAME: projector
#+TAGS: ido, projectile
#+EL_TITLE0: 【M-!カイゼン】シェルコマンド履歴をido化し専用バッファで実行させる！projectile対応
#+EL_URL: 
#+begin: org2blog
#+TITLE: projector.el : 【M-!カイゼン】シェルコマンド履歴をido化し専用バッファで実行させる！projectile対応
[includeme file="inc-package-table.php" name="projector" where="melpa"]

#+end:
** 概要
*M-!* でシェルコマンドを実行していると、
実行するコマンドがだいたい決まってくるものです。

そこで、シェルコマンド履歴を *ido* インターフェースで選択してみませんか？

さらにシェルコマンドの実行結果を従来の*Shell Command Output*ではなく
現在のディレクトリ(プロジェクト)とコマンドごとに保存すると
次回M-!で別のコマンドを実行しても前の実行結果は消えません。

しかも、時間がかかるコマンドを
*projector-always-background-regex* で設定しておけば
自動的にバックグラウンドで実行してくれます。

実行結果は [[http://emacs.rubikitch.com/alert/][alert.el(レビュー)]] で表示されるので、
*growlnotify* など好きな通知プログラムが使えます。
(デフォルトはミニバッファに表示)

*projectile* でプロジェクトを管理しているならば、
プロジェクトルートでコマンドを実行できます。

- *M-x projector-run-shell-command-current-directory* :: カレントディレクトリで実行
- *M-x projector-run-shell-command-project-root* :: プロジェクトルートで実行

C-uを付けて実行すると強制的にバックグラウンド実行になります。

M-!をちょっとカイゼンしたいならば入れておいて損はありません。

*projector.el* 本体はidoとは関係なく、
単に *completing-read* でシェルコマンド履歴を呼んでいるので
[[http://emacs.rubikitch.com/ido-occasional/][ido-occasional.el(レビュー)]] でido化しています。


# (progn (forward-line 1)(shell-command "screenshot-time.rb org_template" t))
#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150325065951.png]]
Fig1: idoでコマンド履歴を選択

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150325070001.png]]
Fig2: 実行結果は専用バッファで表示！

[includeme file="inc-package-install.php" name="projector" where="melpa"]
** 設定 [[http://rubikitch.com/f/150325061231.projector.1.el][150325061231.projector.1.el(以下のコードと同一)]]
#+BEGIN: include :file "/r/sync/junk/150325/150325061231.projector.1.el"
#+BEGIN_SRC fundamental
(require 'projectile)                   ;使おうが使わまいが必要
(require 'ido-occasional)
;;; M-!を置き換え。projectile好きならば projector-run-shell-command-project-root でもよい
(global-set-key (kbd "M-!") (with-ido-completion projector-run-shell-command-current-directory))
;;; コマンドが正規表現にマッチしていれば自動でバックグラウンド実行になる
(setq projector-always-background-regex '("^mysql.server\\.*" "^powder\\.*" "sleep"))
;;; fix bug
(defvaralias 'projector-command-history 'shell-command-history)
(define-key minibuffer-local-completion-map " " nil)
#+END_SRC

#+END:

** 実行方法
#+BEGIN_EXAMPLE
$ wget http://rubikitch.com/f/150325061231.projector.1.el
$ emacs -Q -f package-initialize -l 150325061231.projector.1.el
#+END_EXAMPLE

# /r/sync/screenshots/20150325065951.png http://rubikitch.com/wp-content/uploads/2015/03/wpid-20150325065951.png
# /r/sync/screenshots/20150325070001.png http://rubikitch.com/wp-content/uploads/2015/03/wpid-20150325070001.png
[includeme file="inc-package-relate.php" name="projector"]
