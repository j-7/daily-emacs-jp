#+BLOG: rubikitch
#+POSTID: 1140
#+BLOG: rubikitch
#+DATE: [2015-09-16 Wed 05:36]
#+PERMALINK: edit-at-point
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil \n:t -:nil
#+ISPAGE: nil
#+DESCRIPTION:
# (progn (erase-buffer)(find-file-hook--org2blog/wp-mode))
#+BLOG: rubikitch
#+CATEGORY: コピー・貼り付け
#+EL_PKG_NAME: edit-at-point
#+TAGS: thing-at-point
#+EL_TITLE0: カーソル位置のthing(単語・シンボル・行など)をcut/copy/pasteする
#+EL_URL: 
#+begin: org2blog
#+TITLE: edit-at-point.el : カーソル位置のthing(単語・シンボル・行など)をcut/copy/pasteする
[includeme file="inc-package-table.php" name="edit-at-point" where="melpa"]

#+end:
** 概要
*edit-at-point.el* はカーソル位置のthingを編集するコマンド群です。

thingはword/symbol/str/line/paren/defun、
actionはcut/copy/delete/paste/dupで、
総当たり的にコマンドが定義されています。

たとえば単語をカットするコマンドはM-x edit-at-point-word-cutです。

さすがに全コマンドをキーに割り当てるのは現実的ではないので、
C-:でthingとactionを選択できるようにしておきました。

それでも新しいキーバインドを消費することを考えたら
M-wでまかなう [[http://emacs.rubikitch.com/easy-kill/][easy-kill.el(レビュー)]] の方が使いやすいでしょう。

作者はサンプルの設定でC-S-英字にすべてのコマンドを割り当てていますが、
記憶に超絶負荷がかかるので本当に使いこなせているかは正直怪しいです。

# (progn (forward-line 1)(shell-command "screenshot-time.rb org_template" t))
[includeme file="inc-package-install.php" name="edit-at-point" where="melpa"]
** 設定 [[http://rubikitch.com/f/150916051458.edit-at-point.el][150916051458.edit-at-point.el(以下のコードと同一)]]
#+BEGIN: include :file "/r/sync/junk/150916/150916051458.edit-at-point.el"
#+BEGIN_SRC fundamental
(require 'edit-at-point)
(defvar edit-at-point-thing-alist
  '(("w" . "word")
    ("s" . "symbol")
    ("S" . "str")
    ("l" . "line")
    ("p" . "paren")
    ("d" . "defun")))
(defvar edit-at-point-action-alist
  '(("C-w" . "cut")
    ("M-w" . "copy")
    ("C-d" . "delete")
    ("C-y" . "paste")
    ("d" . "dup")))
(defun edit-at-point-ensure-input (func)
  (let (ans)
    (while (progn (setq ans (funcall func))
                  (not ans)))
    ans))
(defun edit-at-point-prompt (header alist)
  (edit-at-point-ensure-input
   (lambda ()
     (assoc-default
      (format-kbd-macro
       (vector
        (read-event
         (format "%s :: %s" header
                 (mapconcat (lambda (x) (format "%s:%s" (car x) (cdr x)))
                            alist " ")))))
      alist))))
(defun edit-at-point-dispatch ()
  (interactive)
  (let* ((thing (edit-at-point-prompt "Edit at point" edit-at-point-thing-alist))
         (action (edit-at-point-prompt "Action" edit-at-point-action-alist)))
    (funcall (intern (format "edit-at-point-%s-%s" thing action)))))
(global-set-key (kbd "C-:") 'edit-at-point-dispatch)
#+END_SRC

#+END:

** 実行方法
#+BEGIN_EXAMPLE
$ wget http://rubikitch.com/f/150916051458.edit-at-point.el
$ emacs -Q -f package-initialize -l 150916051458.edit-at-point.el
#+END_EXAMPLE
[includeme file="inc-package-relate.php" name="edit-at-point"]
