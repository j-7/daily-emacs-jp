#+BLOG: rubikitch
#+POSTID: 1157
#+BLOG: rubikitch
#+DATE: [2015-09-26 Sat 16:54]
#+PERMALINK: diffview
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil \n:t -:nil
#+ISPAGE: nil
#+DESCRIPTION:
# (progn (erase-buffer)(find-file-hook--org2blog/wp-mode))
#+BLOG: rubikitch
#+CATEGORY: コードリーディング
#+EL_PKG_NAME: diffview
#+TAGS: magit, diff, 
#+EL_TITLE0: 【パッチブラウザ】unified diffをわかりやすくside-by-sideで閲覧する
#+EL_URL: 
#+begin: org2blog
#+TITLE: diffview.el : 【パッチブラウザ】unified diffをわかりやすくside-by-sideで閲覧する
[includeme file="inc-package-table.php" name="diffview" where="melpa"]

#+end:
** 概要
unified diffは、side by sideで見るとわかりやすいです。

*diffview.el* はそれを行ってくれます。

*M-x diffview-current* はカレントバッファ全体、
*M-x diffview-region* はregionをside by sideで表示しますが、
本設定では *M-x diffview-dwim* で統合しています。

side by sideで表示された状態において、
スクロールは双方のバッファで連動していて、
qでその状態を終了します。

これらのコマンドはパッチが含まれていれば使えるので、
たとえばmagitやvcのコミットバッファでも使えます。

とはいえmagitならば *M-x magit-ediff* でediff表示もできますが…

# (progn (forward-line 1)(shell-command "screenshot-time.rb org_template" t))
#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150926171832.png]]
Fig1: diffを表示してる状態で

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150926171836.png]]
Fig2: M-x diffview-dwimでわかりやすく表示

[includeme file="inc-package-install.php" name="diffview" where="melpa"]
** 設定 [[http://rubikitch.com/f/150926171234.diffview.el][150926171234.diffview.el(以下のコードと同一)]]
#+BEGIN: include :file "/r/sync/junk/150926/150926171234.diffview.el"
#+BEGIN_SRC fundamental
(require 'diffview)
(defun diffview-dwim ()
  (interactive)
  (if (region-active-p)
      (diffview-region)
    (diffview-current)))
#+END_SRC

#+END:

** 実行方法
#+BEGIN_EXAMPLE
$ wget http://rubikitch.com/f/150926171234.diffview.el
$ emacs -Q -f package-initialize -l 150926171234.diffview.el
#+END_EXAMPLE
[includeme file="inc-package-relate.php" name="diffview"]
